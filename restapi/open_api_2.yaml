openapi: 3.1.0
info:
  title: Communication Preferences
  version: '1.0'
  x-logo:
    url: ''
servers:
  - url: 'https://accounts.gigya.com'
    description: ''
    x-last-modified: 1633814282661
components:
  schemas:
    ConsentCheckRequest:
      type: object
      required:
        - consentInstanceId
      properties:
        consentInstanceId:
          type: string
          description: Represents a unique id to the interaction
          example:
            - newsletter
        consentStateValue:
          description: 'the stored consent state in client cache takes value of [accepted, rejected, unknown]'
          type: string
          enum:
            - rejected
            - accepted
            - unknown
          example:
            - rejected
            - accepted
            - unknown
        consentString:
          type: string
          description: The stored consent string in client cache
          example:
            - Base 64 string reverence to the TCF consent string
    ConsentCheckResponse:
      type: object
      required:
        - consentInstanceId
      properties:
        consentRequired:
          description: Whether consent is required from the user.
        consentInstanceId:
          type: string
          description: Represents a unique id to the interaction
          example:
            - newsletter
            - special-offers
        consentStateValue:
          type: string
          description: 'The latest consent state known by the server, takes value of [accepted, rejected, unknown]'
          enum:
            - rejected
            - accepted
            - unknown
          example:
            - rejected
            - accepted
            - unknown
        consentString:
          type: string
          description: 'The latest consent string known by the server, If the value is non-null, and if the consentStateValue is "accepted" or "rejected",the value will be cached at client.'
          example:
            - Base 64 string reverence to the TCF consent string
        expireCache:
          type: boolean
          description: 'Indicate that the cache needs to be cleared, set to `true` in conjunction with consentStateValue=''accepted''/''rejected'' to enforce server side consent state'
        metadata:
          type: object
          properties:
            schemaDefinition:
              type: object
              example: '#/components/schemas/SchemaDefinition'
    SchemaDefinition:
      type: object
      properties:
        requiredPurposes:
          type: array
          items:
            type: string
            example:
              - purpose-analytics
              - purpose-marketing
              - purpose-channel
        allowedChannels:
          type: array
          items:
            type: string
            example:
              - email
              - phone
              - purpose-channel
        preferences:
          type: array
          items:
            type: object
            properties:
              frequency:
                type: string
                enum:
                  - daily
                  - weekly
              channel:
                type: string
                enum:
                  - email
                  - SMS
              interests:
                type: array
                items:
                  type: string
                  enum:
                    - pets
                    - cars
    ConsentState:
      description: 'The latest consent state known by the server or client, takes value of [accepted, rejected, unknown]'
      type: string
      enum:
        - rejected
        - accepted
        - unknown
      example:
        - rejected
        - accepted
        - unknown
    CollectorRequest:
      type: object
    CollectorResponse:
      type: object
      properties:
        form:
          type: object
          properties:
            schema:
              type: object
              example: '#/components/schemas/SchemaDefinition'
    PurposesFull:
      type: array
      items:
        type: object
        properties:
          purpose:
            type: string
            example:
              - sending-newsletter
              - sending-marketing-general
              - email-channel
              - sms-channel
              - tos
          consentType:
            type: string
            enum:
              - EXPLICIT
              - IMPLICIT
            example:
              - EXPLICIT
              - IMPLICIT
          purposeCategory:
            type: array
            items:
              type: string
            example:
              - Marketing
              - Contact
              - Legal
          piiCategory:
            type: array
            items:
              type: string
            example:
              - email
              - phone
          primaryPurpose:
            type: boolean
          termination:
            type: string
            example: 'day:30'
    Purposes:
      type: array
      items:
        type: object
        properties:
          purpose:
            type: string
            example:
              - sending-newsletter
              - sending-marketing-general
              - email-channel
              - sms-channel
              - tos
          consentType:
            type: string
            enum:
              - EXPLICIT
              - IMPLICIT
            example:
              - EXPLICIT
              - IMPLICIT
          enabled:
            type: boolean
    UpdateRequest:
      type: object
      required:
        - consentInstanceId
      properties:
        consentInstanceId:
          type: string
          description: Represents a unique id to the interaction
          example:
            - newsletter
            - special-offers
        purposes:
          $ref: '#/components/schemas/Purposes'
        preferences:
          type: array
          items:
            type: object
            properties:
              preference:
                type: string
                example:
                  - frequency.daily
                  - channel.email
              enable:
                type: boolean
        attributes:
          type: object
          properties:
            email:
              type: string
              example: email@email.com
            phoneNumber:
              type: string
              example: email@email.com
            name:
              type: string
              example: thatâ€™s my name
            custom fields:
              type: string
              example: Interested in pets
    ErrorModel:
      type: object
      required:
        - message
        - code
      properties:
        message:
          type: string
        code:
          type: integer
          minimum: 100
          maximum: 600
    ExtendedErrorModel:
      allOf:
        - $ref: '#/components/schemas/ErrorModel'
        - type: object
          required:
            - rootCause
          properties:
            rootCause:
              type: string
paths:
  '/collectors/v1/communication/{collector}':
    summary: Communications collector
    description: 'This API path is used to collect and update communication preferences, initiate a new draft of collector instance if not exists'
    parameters:
      - schema:
          type: string
        in: query
        name: collector
    post:
      requestBody:
        content:
          application/json:
            example: ''
            schema:
              $ref: '#/components/schemas/CollectorRequest'
        required: true
        description: ''
      tags: []
      operationId: communication-preferences-check
      summary: 'check a status of the communication preferences. '
      responses:
        '200':
          description: Returns status of the communication consents
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectorForm'
    put:
      requestBody:
        content:
          application/json:
            example: ''
            schema:
              $ref: '#/components/schemas/UpdateRequest'
        required: true
        description: ''
      tags:
        - signup-form
      summary: 'check a status of the communication preferences. '
      responses:
        '200':
          description: Returns status of the communication consents
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectorForm'


security:
  - JWTAuth: []
tags: []
